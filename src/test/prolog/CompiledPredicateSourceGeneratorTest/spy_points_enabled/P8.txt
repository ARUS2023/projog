package org.projog.compiled_at_runtime;
import org.projog.core.term.*;
import org.projog.core.CutException;
import org.projog.core.KnowledgeBase;
import org.projog.core.KnowledgeBaseUtils;
import org.projog.core.Predicate;
import org.projog.core.PredicateKey;
// "testCutSingleRuleMultipleResults"/0
public final class P8 implements org.projog.core.udp.compiler.CompiledPredicate{
private boolean initRule0(){
if(!F0.getPredicate(INTEGER_5).evaluate())return false;
j=0;
return true;
}
private boolean retryRule0(){
while(true){
switch(j){
case 0:
if(p0==null){
p0=F0.getPredicate(INTEGER_3);
if(!p0.evaluate()){
c=1;
return false;
}}else{
b0_2();
if(!p0.couldReevaluationSucceed()||!p0.evaluate()){
c=1;
return false;
}}
}
return true;
}
}
private void b0_2(){
}
public boolean evaluate(){
if(d){
if(p0==null){
s.logCall(this,TermUtils.EMPTY_ARRAY);
}else{
s.logRedo(this,TermUtils.EMPTY_ARRAY);
}}
try{
switch(c){
case 0:
if(p0==null){
if(initRule0()&&retryRule0())
{
if(d){s.logExit(this,TermUtils.EMPTY_ARRAY,1);}
return true;}
}else if(retryRule0()){
{
if(d){s.logExit(this,TermUtils.EMPTY_ARRAY,1);}
return true;}
}if(c==1)break;
c=1;
}}catch(CutException e){c=1;}
if(d){s.logFail(this,TermUtils.EMPTY_ARRAY);}
return false;}
public boolean couldReevaluationSucceed(){
if (c==0)return(p0==null||p0.couldReevaluationSucceed());
return c!=1;
}
public P8 getPredicate(Term... args){
return getPredicate();
}
public P8 getPredicate() {
return new P8();}
public boolean isRetryable(){return true;}
public P8(KnowledgeBase kb){
F0=(org.projog.core.function.flow.RepeatSetAmount)kb.getPredicateFactory(new PredicateKey("repeat",1));
O=KnowledgeBaseUtils.getArithmeticOperators(kb);
s=KnowledgeBaseUtils.getSpyPoints(kb).getSpyPoint(new PredicateKey("testCutSingleRuleMultipleResults",0));
d=false;
}
private P8() {
d=s.isEnabled();
}
public void setKnowledgeBase(KnowledgeBase k){}
private static org.projog.core.function.flow.RepeatSetAmount F0;
private static org.projog.core.ArithmeticOperators O;
private Predicate p0;
private static final IntegerNumber INTEGER_5=new IntegerNumber(5L);
private static final IntegerNumber INTEGER_3=new IntegerNumber(3L);
private int j;
private int c;
private static org.projog.core.SpyPoints.SpyPoint s;
private final boolean d;
}
